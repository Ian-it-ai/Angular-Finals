{"ast":null,"code":"var _class;\nimport { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./post.service\";\nimport * as i2 from \"@angular/common/http\";\nexport class BackEndService {\n  constructor(postService, http) {\n    this.postService = postService;\n    this.http = http;\n  }\n  saveData() {\n    const listofPosts = this.postService.getPost();\n    this.http.put(https, subscribe(res => {\n      console.log(res);\n      // Call setPosts after saving the new post\n      this.postService.setPosts(listofPosts);\n    }));\n  }\n  fetchData() {\n    return this.http.get('https://gutierrez-firebase-default-rtdb.asia-southeast1.firebasedatabase.app/posts.json').pipe(tap(listofPosts => {\n      console.log(listofPosts);\n      listofPosts.forEach(post => {\n        if (!Array.isArray(post.comments)) {\n          post.comments = [];\n        }\n      });\n      this.postService.setPosts(listofPosts);\n      this.postService.listChangedEvent.emit(listofPosts);\n    }));\n  }\n}\n_class = BackEndService;\n_class.ɵfac = function BackEndService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.PostService), i0.ɵɵinject(i2.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["tap","BackEndService","constructor","postService","http","saveData","listofPosts","getPost","put","https","subscribe","res","console","log","setPosts","fetchData","get","pipe","forEach","post","Array","isArray","comments","listChangedEvent","emit","i0","ɵɵinject","i1","PostService","i2","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\IAN NICHOLAS BUENO\\Desktop\\Angular Finals\\Bueno Final Proj\\src\\app\\back-end.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { PostService } from './post.service';\nimport { Post } from './post.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackEndService {\n\n  constructor(private postService: PostService, private http: HttpClient) { }\n\n  saveData(){\n    const listofPosts: Post[] = this.postService.getPost();\n    this.http.put(https://final-project-92107-default-rtdb.asia-southeast1.firebasedatabase.app/, listofPosts)\n    .subscribe((res: any) => {\n      console.log(res);\n      // Call setPosts after saving the new post\n      this.postService.setPosts(listofPosts);\n    })\n  }\n\n  fetchData(): Observable<Post[]> {\n    return this.http.get<Post[]>('https://gutierrez-firebase-default-rtdb.asia-southeast1.firebasedatabase.app/posts.json')\n      .pipe(tap((listofPosts: Post[])=> {\n        console.log(listofPosts)\n\n        listofPosts.forEach(post => {\n          if (!Array.isArray(post.comments)) {\n            post.comments = [];\n          }\n        });\n        \n        this.postService.setPosts(listofPosts);\n        this.postService.listChangedEvent.emit(listofPosts);\n      }));\n  }\n}"],"mappings":";AAIA,SAAqBA,GAAG,QAAQ,MAAM;;;;AAKtC,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,WAAwB,EAAUC,IAAgB;IAAlD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,IAAI,GAAJA,IAAI;EAAgB;EAE1EC,QAAQA,CAAA;IACN,MAAMC,WAAW,GAAW,IAAI,CAACH,WAAW,CAACI,OAAO,EAAE;IACtD,IAAI,CAACH,IAAI,CAACI,GAAG,CAACC,KAAK,EAClBC,SAAS,CAAEC,GAAQ,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB;MACA,IAAI,CAACR,WAAW,CAACW,QAAQ,CAACR,WAAW,CAAC;IACxC,CAAC,CAAC;EACJ;EAEAS,SAASA,CAAA;IACP,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAS,yFAAyF,CAAC,CACpHC,IAAI,CAACjB,GAAG,CAAEM,WAAmB,IAAG;MAC/BM,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;MAExBA,WAAW,CAACY,OAAO,CAACC,IAAI,IAAG;QACzB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAACG,QAAQ,CAAC,EAAE;UACjCH,IAAI,CAACG,QAAQ,GAAG,EAAE;;MAEtB,CAAC,CAAC;MAEF,IAAI,CAACnB,WAAW,CAACW,QAAQ,CAACR,WAAW,CAAC;MACtC,IAAI,CAACH,WAAW,CAACoB,gBAAgB,CAACC,IAAI,CAAClB,WAAW,CAAC;IACrD,CAAC,CAAC,CAAC;EACP;;SA5BWL,cAAc;;mBAAdA,MAAc,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;;SAAd7B,MAAc;EAAA8B,OAAA,EAAd9B,MAAc,CAAA+B,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}